schema {
  query: Query
  mutation: Mutation
}

type Query {
  getItems(limit: Int, cursor: String): PaginatedItems!
  getAccounts(id: ID!): [Account!]!
  getTransactions(id: ID!, limit: Int, cursor: String): PaginatedTransactions!
  getInvestmentAccounts(id: ID!): [InvestmentAccount!]!
  getInvestmentHoldings(id: ID!): [Holding!]!
}

type Mutation {
  disconnectItem(id: ID!): Boolean
}

type Item {
  item_id: ID!
  institution_id: ID!
  institution_name: String!
}

type PaginatedItems {
  cursor: String
  items: [Item!]!
}

type Account {
  account_id: ID!
  type: String
  name: String
  subtype: String
  balances: Balances
  mask: String
}

type Balances {
  current: String
  iso_currency_code: String
}

type Transaction {
  transaction_id: ID!
  account_id: ID
  amount: String
  name: String
  iso_currency_code: String
  date: String
  payment_channel: String
  transaction_type: String
}

type PaginatedTransactions {
  cursor: String
  transactions: [Transaction!]!
}

type InvestmentAccount {
  account_id: ID!
  name: String
  type: String
  subtype: String
  balances: InvestmentBalances
  mask: String
}

type InvestmentBalances {
  current: String
  iso_currency_code: String
  available: String
}

type Holding {
  account_id: ID!
  security_id: ID!
  institution_price: Float
  institution_price_as_of: String
  cost_basis: Float
  quantity: Float
  currency: String
  security: Security
}

type Security {
  security_id: ID!
  ticker_symbol: String
  name: String
  currency: String
  type: String
}
